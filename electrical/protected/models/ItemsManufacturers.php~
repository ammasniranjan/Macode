<?php

/**
 * This is the model class for table "items_manufacturers".
 *
 * The followings are the available columns in table 'items_manufacturers':
 * @property string $id
 * @property string $item_id
 * @property string $manufacturer_id
 * @property string $unit_cost
 * @property string $vendor_id
 *
 * The followings are the available model relations:
 * @property Items $item
 * @property Manufacturers $manufacturer
 * @property ItemsManufacturersLocations[] $itemsManufacturersLocations
 */
class ItemsManufacturers extends CActiveRecord
{
	/**
	 * Returns the static model of the specified AR class.
	 * @param string $className active record class name.
	 * @return ItemsManufacturers the static model class
	 */
	public static function model($className=__CLASS__)
	{
		return parent::model($className);
	}

	/**
	 * @return string the associated database table name
	 */
	public function tableName()
	{
		return 'items_manufacturers';
	}

	/**
	 * @return array validation rules for model attributes.
	 */
	public function rules()
	{
		// NOTE: you should only define rules for those attributes that
		// will receive user inputs.
		return array(
			array('item_id, manufacturer_id, unit_cost, vendor_id', 'required'),
			array('item_id, manufacturer_id, unit_cost, vendor_id', 'length', 'max'=>20),
			// The following rule is used by search().
			// Please remove those attributes that should not be searched.
			array('id, item_id, manufacturer_id, unit_cost, vendor_id', 'safe', 'on'=>'search'),
		);
	}

	/**
	 * @return array relational rules.
	 */
	public function relations()
	{
		// NOTE: you may need to adjust the relation name and the related
		// class name for the relations automatically generated below.
		return array(
			'item' => array(self::BELONGS_TO, 'Items', 'item_id'),
			'manufacturer' => array(self::BELONGS_TO, 'Manufacturers', 'manufacturer_id'),
			'itemsManufacturersLocations' => array(self::HAS_MANY, 'ItemsManufacturersLocations', 'items_manufacturer_id'),
		);
	}

	/**
	 * @return array customized attribute labels (name=>label)
	 */
	public function attributeLabels()
	{
		return array(
			'id' => 'ID',
			'item_id' => 'Item',
			'manufacturer_id' => 'Manufacturer',
			'unit_cost' => 'Unit Cost',
			'vendor_id' => 'Vendor',
                         'item_desc' => 'Item Description',
                          'manufacturers' => 'Manufacturer Name',
		);
	}

	/**
	 * Retrieves a list of models based on the current search/filter conditions.
	 * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.
	 */
	public function search()
	{
		// Warning: Please modify the following code to remove attributes that
		// should not be searched.

		$criteria=new CDbCriteria;

		$criteria->compare('id',$this->id,true);
		$criteria->compare('item_id',$this->item_id,true);
		$criteria->compare('manufacturer_id',$this->manufacturer_id,true);
		$criteria->compare('unit_cost',$this->unit_cost,true);
		$criteria->compare('vendor_id',$this->vendor_id,true);

		return new CActiveDataProvider($this, array(
			'criteria'=>$criteria,
		));
	}
}
